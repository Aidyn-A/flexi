stages:
  - build
  - reggie_checkin
  - reggie_nightly
  - deploy

# ----------------------------------------------------------------------------------------------------------------------------------------------------
# Stage "build": Build with intel/gnu on check-in
# ----------------------------------------------------------------------------------------------------------------------------------------------------
build_gnu:
  stage: build
  tags:
    - withmodules-concurrent
  script:
    - git clone git@gitlab.iag.uni-stuttgart.de:reggie/reggie.git
    - module load env/gnu; mkdir -p build_gnu ; cd build_gnu
    - cmake .. -DFLEXI_BUILD_HDF5=OFF ; make -j all
  cache:
    key: "$CI_COMMIT_REF_SLUG-GNU"
    paths:
      - build_gnu
    policy: push

build_intel:
  stage: build
  tags:
    - withmodules-concurrent
  script:
    - git clone git@gitlab.iag.uni-stuttgart.de:reggie/reggie.git
    - module load env/intel; mkdir -p build_intel ; cd build_intel
    - cmake .. -DFLEXI_BUILD_HDF5=OFF ; make -j all
  cache:
    key: "$CI_COMMIT_REF_SLUG-INTEL"
    paths:
      - build_intel
    policy: push

# ----------------------------------------------------------------------------------------------------------------------------------------------------
# Stage "reggie_checkin": Run most simple reggie with previous builds on check-in
# ----------------------------------------------------------------------------------------------------------------------------------------------------
gnu:
  stage: reggie_checkin
  tags:
    - withmodules-concurrent
  script:
    - module load env/gnu ; cd build_gnu
    - python ../reggie/reggie.py ../regressioncheck/checks/run_basic/freestream_3D -e ./bin/flexi
  cache:
    key: "$CI_COMMIT_REF_SLUG-GNU"
    paths:
      - build_gnu
    policy: pull

intel:
  stage: reggie_checkin
  tags:
    - withmodules-concurrent
  script:
    - module load env/intel ; cd build_intel
    - python ../reggie/reggie.py ../regressioncheck/checks/run_basic/freestream_3D -e ./bin/flexi
  cache:
    key: "$CI_COMMIT_REF_SLUG-INTEL"
    paths:
      - build_intel
    policy: pull

# ----------------------------------------------------------------------------------------------------------------------------------------------------
# Stage "reggie_nightly": Build and run
#                         - build all specified compile options in "run_basic" with BUILD_HDF5=ON
#                         - h-p-convtests
#                      examples on nightly
# ----------------------------------------------------------------------------------------------------------------------------------------------------
gnu_build_all:
  stage: reggie_nightly
  tags:
    - withmodules-concurrent
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then  module load env/gnu ; cd build_gnu ;  python ../reggie/reggie.py ../regressioncheck/checks/run_basic ; fi
  cache:
    key: "$CI_COMMIT_REF_SLUG-GNU"
    paths:
      - build_gnu
    policy: pull

gnu_timediscs:
  stage: reggie_nightly
  tags:
    - withmodules-concurrent
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then  module load env/gnu ; cd build_gnu ;  python ../reggie/reggie.py ../regressioncheck/checks/timedisc ; fi
  cache:
    key: "$CI_COMMIT_REF_SLUG-GNU"
    paths:
      - build_gnu
    policy: pull

gnu_convtest:
  stage: reggie_nightly
  tags:
    - withmodules-concurrent
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then module load env/gnu ; cd build_gnu ;  python ../reggie/reggie.py ../regressioncheck/checks/convtest ; fi 
  cache:
    key: "$CI_COMMIT_REF_SLUG-GNU"
    paths:
      - build_gnu
    policy: pull



intel_build_all:
  stage: reggie_nightly
  tags:
    - withmodules-concurrent
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then module load env/intel ; cd build_intel ;  python ../reggie/reggie.py ../regressioncheck/checks/run_basic ; fi
  cache:
    key: "$CI_COMMIT_REF_SLUG-INTEL"
    paths:
      - build_gnu
    policy: pull

intel_timediscs:
  stage: reggie_nightly
  tags:
    - withmodules-concurrent
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then module load env/intel ; cd build_intel ;  python ../reggie/reggie.py ../regressioncheck/checks/timedisc ; fi
  cache:
    key: "$CI_COMMIT_REF_SLUG-INTEL"
    paths:
      - build_gnu
    policy: pull

intel_convtest:
  stage: reggie_nightly
  tags:
    - withmodules-concurrent
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then module load env/intel ; cd build_intel ;  python ../reggie/reggie.py ../regressioncheck/checks/convtest ; fi 
  cache:
    key: "$CI_COMMIT_REF_SLUG-INTEL"
    paths:
      - build_gnu
    policy: pull
 
# ----------------------------------------------------------------------------------------------------------------------------------------------------
# Stage "deploy": 1. Creates doxygen documentation & compiles the documentation creating the *.pdf
#                 2. Copies the doxygen documentation and userguide *.pdf to the homepage server & copies the repository to github 
# ----------------------------------------------------------------------------------------------------------------------------------------------------
documentation:
  stage: deploy
  tags:
    - withmodules-concurrent
  script:
    - cd doc/doxygen ; ./builddoxy.sh
    - if [ -n "${DO_DEPLOY}" ]; then ssh flexi@euler rm -rf homepage/doxygen ; scp -r doc/doxygen/doxygen flexi@euler:~/homepage/. ; fi

userguide:
  stage: deploy
  tags:
    - withmodules-concurrent
  script:
    - cd userguide ; make
    - if [ -n "${DO_DEPLOY}" ]; then scp -r doc/userguide flexi@euler:~/homepage/. ; fi

deploy_github:
  stage: deploy
  tags:
    - withmodules-concurrent
  script:
    - if [ -z "${DO_DEPLOY}" ]; then exit ; fi
    - git clone --single-branch git@gitlab.iag.uni-stuttgart.de:flexi/flexi.git flexi_github ; cd flexi_github ; git push --mirror git@github.com:flexi-framework/flexi.git ; cd ../
    - git clone --bare          git@gitlab.iag.uni-stuttgart.de:flexi/HDF5.git  HDF5_github  ; cd HDF5_github  ; git push --mirror git@github.com:flexi-framework/HDF5.git  ; cd ../
