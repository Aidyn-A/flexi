stages:
  - build
  - error_clean
  - reggie_checkin
  - reggie_nightly
  - reggie_weekly
  - documentation
  - deploy

cache:
  key: "$CI_COMMIT_SHA"
  paths: 
    - build_gnu/    
    - build_intel/    
    - doc/doxygen/doxygen
    - doc/userguide/userguide.pdf
    - regressioncheck/examples

# ----------------------------------------------------------------------------------------------------------------------------------------------------
# Stage "build": Build with intel/gnu on check-in
# ----------------------------------------------------------------------------------------------------------------------------------------------------
build_gnu:
  stage: build
  tags:
    - withmodules
  script:
    - module load env/gnu ; rm -rf build_gnu || true 
    - mkdir -p build_gnu ; cd build_gnu ; cmake .. -DFLEXI_BUILD_HDF5=OFF ; make -j all

build_intel:
  stage: build
  tags:
    - withmodules
  script:
    - module load env/intel ; rm -rf build_intel || true 
    - mkdir -p build_intel ; cd build_intel ; cmake .. -DFLEXI_BUILD_HDF5=OFF ; make -j all

# ----------------------------------------------------------------------------------------------------------------------------------------------------
# Stage "clean": delete build folders if previous builds fail and exit
# ----------------------------------------------------------------------------------------------------------------------------------------------------
clean:
  stage: error_clean
  tags:
    - withmodules
  script:
    - rm -rf build_gnu
    - rm -rf build_intel
    - rm -rf share
  when: on_failure

# ----------------------------------------------------------------------------------------------------------------------------------------------------
# Stage "reggie_checkin": Run most simple reggie with previous builds on check-in
# ----------------------------------------------------------------------------------------------------------------------------------------------------
gnu:
  stage: reggie_checkin
  tags:
    - withmodules
  script:
    - module load env/gnu ; cd build_gnu ;  python ../regressioncheck/reggie.py ../regressioncheck/checks/run_basic -e ./bin/flexi

intel:
  stage: reggie_checkin
  tags:
    - withmodules
  script:
    - module load env/intel ; cd build_intel ;  python ../regressioncheck/reggie.py ../regressioncheck/checks/run_basic -e ./bin/flexi

# ----------------------------------------------------------------------------------------------------------------------------------------------------
# Stage "reggie_nightly": Build and run
#                         - build all specified compile options in "run_basic" with BUILD_HDF5=ON
#                         - h-p-convtests
#                      examples on nightly
# ----------------------------------------------------------------------------------------------------------------------------------------------------
gnu_build_all:
  stage: reggie_nightly
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then  module load env/gnu ; cd build_gnu ;  python ../regressioncheck/reggie.py ../regressioncheck/checks/run_basic ; fi

gnu_convtest:
  stage: reggie_nightly
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then module load env/gnu ; cd build_gnu ;  python ../regressioncheck/reggie.py ../regressioncheck/checks/convtest ; fi 




intel_build_all:
  stage: reggie_nightly
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then module load env/intel ; cd build_intel ;  python ../regressioncheck/reggie.py ../regressioncheck/checks/run_basic ; fi

intel_convtest:
  stage: reggie_nightly
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then module load env/intel ; cd build_intel ;  python ../regressioncheck/reggie.py ../regressioncheck/checks/convtest ; fi 


#            # ----------------------------------------------------------------------------------------------------------------------------------------------------
#            # Stage "reggie_weekly": run 
#            #                         - NACA0012 Tutorial 
#            #                      examples on weekly
#            # ----------------------------------------------------------------------------------------------------------------------------------------------------
#            gnu_weekly_mpi:
#              stage: reggie_weekly
#              tags:
#                - withmodules
#              script:
#                - if [ -n "${DO_WEEKLY}" ]; then  module load env/gnu ; cd build_gnu/bin/ ; ./regressioncheck tutorials ; fi
#            
#            intel_weekly_mpi:
#              stage: reggie_weekly
#              tags:
#                - withmodules
#              script:
#                - if [ -n "${DO_WEEKLY}" ]; then module load env/intel ; cd build_intel/bin/ ; ./regressioncheck tutorials ; fi
#            
#            
#            
#            # ----------------------------------------------------------------------------------------------------------------------------------------------------
#            # Stage "documentation": creates doxygen documentation & compiles the documentation creating the *.pdf
#            # ----------------------------------------------------------------------------------------------------------------------------------------------------
#            doxygen:
#              stage: documentation
#              tags:
#                - withmodules
#              script:
#                - echo 'skipping...'
#                #- cd doc/doxygen ; ./builddoxy.sh
#            
#            userguide:
#              stage: documentation
#              tags:
#                - withmodules
#              script:
#                - echo 'skipping...'
#                #- cd doc/userguide ; make
#            
#            
#            
#            # ----------------------------------------------------------------------------------------------------------------------------------------------------
#            # Stage "deploy": copies the doxygen documentation and userguide *.pdf to the homepage server & copies the repository to github 
#            # ----------------------------------------------------------------------------------------------------------------------------------------------------
#            deploy_homepage:
#              stage: deploy
#              tags:
#                - withmodules
#              script:
#                - if [ -n "${DO_DEPLOY}" ]; then if [ -d "doc/doxygen/doxygen" ]; then ssh flexi@euler rm -rf homepage/doxygen ; scp -r doc/doxygen/doxygen flexi@euler:~/homepage/. ; fi ; fi
#                - if [ -n "${DO_DEPLOY}" ]; then if [ -d "doc/userguide" ]; then scp -r doc/userguide flexi@euler:~/homepage/. ; fi ; fi
#            
#            deploy_github:
#              stage: deploy
#              tags:
#                - withmodules
#              script:
#                - if [ -z "${DO_DEPLOY}" ]; then exit ; fi
#                - git clone --single-branch git@gitlab.iag.uni-stuttgart.de:flexi/flexi.git flexi_github ; cd flexi_github ; git push --mirror git@github.com:flexi-framework/flexi.git ; cd ../
#                - git clone --bare          git@gitlab.iag.uni-stuttgart.de:flexi/HDF5.git  HDF5_github  ; cd HDF5_github  ; git push --mirror git@github.com:flexi-framework/HDF5.git  ; cd ../
#            
