stages:
  - build
  - error_clean
  - reggie_short
  - reggie_long
  - reggie_weekly
  - documentation
  - deploy

cache:
  key: "$CI_BUILD_REF"
  paths: 
    - build_gnu/    
    - build_gnu_hdf5/    
    - build_intel/    
    - build_intel_hdf5/    
    - doc/doxygen/doxygen
    - doc/userguide/userguide.pdf
    - regressioncheck/examples

# ----------------------------------------------------------------------------------------------------------------------------------------------------
# Stage "build": Build with intel/gnu on check-in
# ----------------------------------------------------------------------------------------------------------------------------------------------------
build_gnu:
  stage: build
  tags:
    - withmodules
  script:
    - module load env/gnu ; rm -rf build_gnu || true 
    - mkdir -p build_gnu ; cd build_gnu ; cmake .. -DFLEXI_BUILD_HDF5=OFF ; make all

build_intel:
  stage: build
  tags:
    - withmodules
  script:
    - module load env/intel ; rm -rf build_intel || true 
    - mkdir -p build_intel ; cd build_intel ; cmake .. -DFLEXI_BUILD_HDF5=OFF ; make all

# ----------------------------------------------------------------------------------------------------------------------------------------------------
# Stage "clean": delete build folders if previous builds fail and exit
# ----------------------------------------------------------------------------------------------------------------------------------------------------
clean:
  stage: error_clean
  tags:
    - withmodules
  script:
    - rm -rf build_gnu
    - rm -rf build_intel
    - rm -rf share
    - rm -rf build_gnu_hdf5
    - rm -rf build_intel_hdf5
  when: on_failure

# ----------------------------------------------------------------------------------------------------------------------------------------------------
# Stage "reggie_short": Run most simple reggie with previous builds on check-in
# ----------------------------------------------------------------------------------------------------------------------------------------------------
gnu:
  stage: reggie_short
  tags:
    - withmodules
  script:
    - module load env/gnu ; cd build_gnu/bin/ ; ./regressioncheck

intel:
  stage: reggie_short
  tags:
    - withmodules
  script:
    - module load env/intel ; cd build_intel/bin/ ; ./regressioncheck

# ----------------------------------------------------------------------------------------------------------------------------------------------------
# Stage "reggie_long": Build and run
#                         - build all specified compile options in "run_basic"
#                         - h-p-convtests
#                         - compile HDF5
#                      examples on nightly
# ----------------------------------------------------------------------------------------------------------------------------------------------------
gnu_build_mpi:
  stage: reggie_long
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then  module load env/gnu ; cd build_gnu/bin/ ; ./regressioncheck build 2; fi

gnu_convtest:
  stage: reggie_long
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then module load env/gnu ; cd build_gnu/bin/ ; ./regressioncheck build feature_convtest 2; fi

gnu_build_hdf5:
  stage: reggie_long
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then  module load env/gnu ; cd build_gnu/bin/ ; ./regressioncheck build build_freestream_hdf5_mpi_1x 2 ; fi

gnu_build_hdf5_single:
  stage: reggie_long
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then  module load env/gnu ; cd build_gnu/bin/ ; ./regressioncheck build build_freestream_hdf5_single_18x 2; fi




intel_build_mpi:
  stage: reggie_long
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then module load env/intel ; cd build_intel/bin/ ; ./regressioncheck build 2; fi

intel_convtest:
  stage: reggie_long
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then module load env/intel ; cd build_intel/bin/ ; ./regressioncheck build feature_convtest 2; fi

intel_build_hdf5:
  stage: reggie_long
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then  module load env/intel ; cd build_intel/bin/ ; ./regressioncheck build build_freestream_hdf5_mpi_1x 2 ; fi

intel_build_hdf5_single:
  stage: reggie_long
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then  module load env/intel ; cd build_intel/bin/ ; ./regressioncheck build build_freestream_hdf5_single_18x 2; fi

# ----------------------------------------------------------------------------------------------------------------------------------------------------
# Stage "reggie_weekly": run 
#                         - NACA0012 Tutorial 
#                      examples on weekly
# ----------------------------------------------------------------------------------------------------------------------------------------------------
gnu_weekly_mpi:
  stage: reggie_long
  tags:
    - withmodules
  script:
    - if [ -n "${DO_WEEKLY}" ]; then  module load env/gnu ; cd build_gnu/bin/ ; ./regressioncheck tutorials ; fi

intel_weekly_mpi:
  stage: reggie_long
  tags:
    - withmodules
  script:
    - if [ -n "${DO_WEEKLY}" ]; then module load env/intel ; cd build_intel/bin/ ; ./regressioncheck tutorials ; fi



# ----------------------------------------------------------------------------------------------------------------------------------------------------
# Stage "documentation": creates doxygen documentation & compiles the documentation creating the *.pdf
# ----------------------------------------------------------------------------------------------------------------------------------------------------
doxygen:
  stage: documentation
  tags:
    - pomodoro
  script:
    - cd doc/doxygen ; ./builddoxy.sh

userguide:
  stage: documentation
  tags:
    - pomodoro
  script:
    - cd doc/userguide ; make



# ----------------------------------------------------------------------------------------------------------------------------------------------------
# Stage "deploy": copies the doxygen documentation and userguide *.pdf to the homepage server & copies the repository to github 
# ----------------------------------------------------------------------------------------------------------------------------------------------------
deploy_homepage:
  stage: deploy
  tags:
    - pomodoro
  script:
    - if [ -n "${DO_DEPLOY}" ]; then if [ -d "doc/doxygen/doxygen" ]; then ssh flexi@euler rm -rf homepage/doxygen ; scp -r doc/doxygen/doxygen flexi@euler:~/homepage/. ; fi ; fi
    - if [ -n "${DO_DEPLOY}" ]; then if [ -d "doc/userguide" ]; then scp -r doc/userguide flexi@euler:~/homepage/. ; fi ; fi

deploy_github:
  stage: deploy
  tags:
    - pomodoro
  script:
    - if [ -z "${DO_DEPLOY}" ]; then exit ; fi
    - git clone --single-branch git@gitlab.iag.uni-stuttgart.de:flexi/flexi.git flexi_github ; cd flexi_github ; git push --mirror git@github.com:flexi-framework/flexi.git ; cd ../
    - git clone --bare          git@gitlab.iag.uni-stuttgart.de:flexi/HDF5.git  HDF5_github  ; cd HDF5_github  ; git push --mirror git@github.com:flexi-framework/HDF5.git  ; cd ../

