!=================================================================================================================================
! Copyright (c) 2016  Prof. Claus-Dieter Munz 
! This file is part of FLEXI, a high-order accurate framework for numerically solving PDEs with discontinuous Galerkin methods.
! For more information see https://www.flexi-project.org and https://nrg.iag.uni-stuttgart.de/
!
! FLEXI is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License 
! as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
!
! FLEXI is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty
! of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License v3.0 for more details.
!
! You should have received a copy of the GNU General Public License along with FLEXI. If not, see <http://www.gnu.org/licenses/>.
!=================================================================================================================================
!
!   This a parameter file for Flexi (https://flexi-project.org)
!    
!   Usage: mpirun -np XX ./flexi thisparameterfile.ini or
!          ./flexi thisparameterfile.ini
!
!   Structure: Keyword = Value
!              Not case sensitive, order of keywords not important
!           
!   ./flexi --help for a list of available settings
!
!=========================================================================================
! Interpolation
!=========================================================================================
N                     =              6 ! Polynomial degree of computation to represent to  
                                       ! solution  
!=========================================================================================
! Output
!=========================================================================================
NVisu                 =             10 ! Polynomial degree at which solution is sampled for  
                                       ! visualization.  
ProjectName           = TGV_Re1600_4cubedElems ! Name of the current simulation (mandatory).  
doPrintStatusLine     =              T ! Print: percentage of time, ...  
!=========================================================================================
! Mesh
!=========================================================================================
MeshFile              = CART_HEX_PERIODIC_4x4x4_mesh.h5 ! (relative) path to meshfile (mandatory).  
                                       ! Turn off to discard high-order data and treat  
                                       ! curved meshes as linear meshes.  
!=========================================================================================
! Equation of State
!=========================================================================================
mu0                   =       0.000625 ! Re=1/mu0
!=========================================================================================
! Equation
!=========================================================================================
! IniExactFunc 0 will use the function in the tescase.
! The RefState does not matter in this case, but needs to be set for correct read-in.
IniExactFunc          =              0 ! Exact function to be used for computing initial  
                                       ! solution.  
                                        
IniRefState           =              1 ! Refstate required for initialization.  
                                        
RefState              = (/1.,0.3,0.,0.,0.71428571/) ! State(s) in primitive variables (density, velx,  
                                                    ! vely, velz, pressure).  
!=========================================================================================
! Riemann
!=========================================================================================
Riemann               =             33 ! Riemann solver to be used. 1: Lax-Friedrichs, 2:  
                                       ! HLLC, 3: Roe, 33: Roe with entropy fix, 4: HLL, 5:  
                                       ! HLLE, 6: HLLEM  
!=========================================================================================
! Overintegration
!=========================================================================================
OverintegrationType   =              1 ! Type of overintegration. 0: none, 1: cut-off  
                                       ! filter, 2: conservative cut-off filter, 3:  
                                       ! Selective overintegration of advective fluxes  
NUnder                =              4 ! Polynomial degree to which solution is filtered  
                                       ! (OverintegrationType == 1 or 2  
!=========================================================================================
! TimeDisc
!=========================================================================================
TimeDiscMethod        = CarpenterRK4-5 ! Specifies the type of time-discretization to be  
                                       ! used,  
                                       ! e.g. the name of a specific Runge-Kutta scheme.  
                                       ! Possible values:  
                                       !   * standardrk3-3  
                                       !   * carpenterrk4-5  
                                       !   * niegemannrk4-14  
                                       !   * toulorgerk4-8c  
                                       !   * toulorgerk3-7c  
                                       !   * toulorgerk4-8f  
                                       !   * ketchesonrk4-20  
                                       !   * ketchesonrk4-18  
TEnd                  =            10. ! End time of the simulation (mandatory).  
CFLScale              =            0.9 ! Scaling factor for the theoretical CFL number,  
                                       ! typical range 0.1..1.0 (mandatory)  
DFLScale              =            0.9 ! Scaling factor for the theoretical DFL number,  
                                       ! typical range 0.1..1.0 (mandatory)  
!=========================================================================================
! Analyze
!=========================================================================================
CalcErrorNorms        =              F ! Set true to compute L2 and LInf error norms at  
                                       ! analyze step.  
Analyze_dt            =            0.5 ! Specifies time intervall at which analysis  
                                       ! routines are called.  
NAnalyze              =             10 ! Polynomial degree at which analysis is performed  
                                       ! (e.g. for L2 errors). Default: 2*N.  
